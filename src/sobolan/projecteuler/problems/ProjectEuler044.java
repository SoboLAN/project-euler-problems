package sobolan.projecteuler.problems;

/**
 * @author Radu Murzea
 *
 * @problemstatement
 * Pentagonal numbers are generated by the formula, P(n)=n(3n−1)/2. The first ten pentagonal numbers are:
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 * It can be seen that P(4) + P(7) = 22 + 70 = 92 = P(8). However, their difference, 70 − 22 = 48, is not pentagonal.
 * Find the pair of pentagonal numbers, P(j) and P(k), for which their sum and difference are pentagonal
 * and D = |P(k) − P(j)| is minimised; what is the value of D?
 */
public class ProjectEuler044 extends AbstractExecutableProblem
{
    @Override
    public String getResult()
    {
        int k = 2;
        while (true) {
            int Pk = k * ( 3 * k - 1) / 2;

            for (int j = k - 1; j >= 1; j--) {
                int Pj = j * (3 * j - 1) / 2;

                if (this.isPentagonal(Pk - Pj) && this.isPentagonal(Pk + Pj)) {
                    return String.format("P(%d) - P(%d) = %d", k, j, Pk - Pj);
                }
            }

            k++;
        }
    }

    private boolean isPentagonal(int number)
    {
        double p = (Math.sqrt(24 * number + 1) + 1.0) / 6.0;

        return p == (int) p;
    }
}
