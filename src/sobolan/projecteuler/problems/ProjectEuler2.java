package sobolan.projecteuler.problems;

/**
 * @author SoboLAN
 *
 * @problemstatement
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
public class ProjectEuler2 extends AbstractExecutableProblem
{
    private final int LIMIT = 4 * 1000 * 1000;

    @Override
    public String getResult()
    {
        int term1 = 1;
		int term2 = 2;

		int totalTerms = 1;
		int evenTerms = 0;

		Integer sum = 0;

		while (term2 < LIMIT) {
			totalTerms++;

			if (term2 % 2 == 0) {
				sum += term2;
				evenTerms++;
			}

			int ax = term2;
			term2 += term1;
			term1 = ax;
		}

        return sum.toString();
    }
}
